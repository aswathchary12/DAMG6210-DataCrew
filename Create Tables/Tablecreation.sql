--- Table Creation

CREATE TABLE ZIP_CODE(
    AREA_CODE INT NOT NULL PRIMARY KEY,
    CITY VARCHAR(25) NOT NULL,
    STATEE VARCHAR(25) NOT NULL,
    COUNTRY VARCHAR(25) NOT NULL
);

CREATE TABLE ADDRESS(
   ADDRESS_ID INT NOT NULL PRIMARY KEY,
   ADDRESS_LINE1 VARCHAR (100) NOT NULL,
   ADDRESS_LINE2 VARCHAR (100),
   AREA_CODE INT NOT NULL,
   FOREIGN KEY(AREA_CODE) REFERENCES ZIP_CODE(AREA_CODE)
);

CREATE TABLE ITEM_CONDITION(
    IC_ID INT NOT NULL PRIMARY KEY,
    ITEM_CONDITION VARCHAR(50),
    IC_DESCRIPTION VARCHAR(250)
);

CREATE TABLE CATEGORYY(
    CATEGORY_ID INT NOT NULL PRIMARY KEY,
    CATEGORY_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE SHIPPER(
    SHIPPER_ID INT NOT NULL PRIMARY KEY,
    CONTACT_NUMBER INT NOT NULL,
    SHIPPER_NAME VARCHAR(50) NOT NULL,
    SHIPPER_USERNAME VARCHAR(50) NOT NULL,
    SHIPPER_PASSWORD VARCHAR(50) NOT NULL,
    SHIPPER_EMAIL VARCHAR(50) NOT NULL,
    AREA_CODE INT NOT NULL,
    FOREIGN KEY(AREA_CODE) REFERENCES ZIP_CODE(AREA_CODE)
);

CREATE TABLE CUSTOMER(
   CUST_ID INT NOT NULL PRIMARY KEY,
   CUST_NAME VARCHAR (50) NOT NULL,
   CUST_USERNAME VARCHAR (20) NOT NULL,
   CUST_PASSWORD VARCHAR (20) NOT NULL,
   DATE_OF_BIRTH DATE,
   CUST_PH INT NOT NULL,
   CUST_EMAIL VARCHAR(25) NOT NULL,
   ADDRESS_ID INT,
   FOREIGN KEY(ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID)
);


CREATE TABLE SELLER(
   SELLER_ID INT NOT NULL PRIMARY KEY,
   SELLER_NAME VARCHAR (50) NOT NULL,
   SELLER_USERNAME VARCHAR (20) NOT NULL,
   SELLER_PASSWORD VARCHAR (20) NOT NULL,
   SELLER_PH INT NOT NULL,
   SELLER_EMAIL VARCHAR(25) NOT NULL,
   ADDRESS_ID INT,
   FOREIGN KEY(ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID)
);

CREATE TABLE CART(
    CART_ID INT NOT NULL PRIMARY KEY,
    NUMBER_OF_ITEMS INT NOT NULL,
    TOTAL_COST INT NOT NULL
);


CREATE TABLE ORDERR(
    ORDER_ID INT NOT NULL PRIMARY KEY,
    ORDER_DATE DATE NOT NULL,
    CUST_ID INT NOT NULL,
    FOREIGN KEY(CUST_ID) REFERENCES CUSTOMER(CUST_ID),
    CART_ID INT NOT NULL,
    FOREIGN KEY(CART_ID) REFERENCES CART(CART_ID)
);

CREATE TABLE PAYMENT(
    PAYMENT_ID INT NOT NULL PRIMARY KEY,
    AMOUNT INT NOT NULL,
    PAYMENT_MODE VARCHAR(30) NOT NULL,
    PAYMENT_DATE DATE NOT NULL,
    ORDER_ID INT NOT NULL,
    FOREIGN KEY(ORDER_ID) REFERENCES ORDERR(ORDER_ID)
);

CREATE TABLE SHIPMENT(
    SHIPMENT_ID INT NOT NULL PRIMARY KEY,
    SHIPMENT_DATE DATE NOT NULL,
    DELIVERY_STATUS VARCHAR(20) NOT NULL,
    ADDRESS_ID INT,
    FOREIGN KEY(ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID),
    SHIPPER_ID INT,
    FOREIGN KEY(SHIPPER_ID) REFERENCES SHIPPER(SHIPPER_ID),
    PAYMENT_ID INT,
    FOREIGN KEY(PAYMENT_ID) REFERENCES PAYMENT(PAYMENT_ID)
);

CREATE TABLE ITEM(
    ITEM_ID INT NOT NULL PRIMARY KEY,
    ITEM_NAME VARCHAR(25) NOT NULL,
    PRICE INT NOT NULL,
    SELLER_ID INT NOT NULL,
    FOREIGN KEY(SELLER_ID) REFERENCES SELLER(SELLER_ID),
    IC_ID INT,
    FOREIGN KEY(IC_ID) REFERENCES ITEM_CONDITION(IC_ID),
    CATEGORY_ID INT NOT NULL,
    FOREIGN KEY(CATEGORY_ID) REFERENCES CATEGORYY(CATEGORY_ID),
    CUST_ID INT,
    FOREIGN KEY(CUST_ID) REFERENCES CUSTOMER(CUST_ID)
);


CREATE TABLE ITEM_CART(
    ITEM_ID INT NOT NULL,
    CART_ID INT NOT NULL,
    PRIMARY KEY(ITEM_ID, CART_ID),
    FOREIGN KEY(ITEM_ID) REFERENCES ITEM(ITEM_ID),
    FOREIGN KEY(CART_ID) REFERENCES CART(CART_ID)
);

CREATE TABLE PRODUCT_PRICE_TRACKER (
PRODUCT_ID INT,
ITEM_NAME VARCHAR(25),
OLD_PRICE INT,
NEW_PRICE INT,
UPDATE_TS DATE
);
